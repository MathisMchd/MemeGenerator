# "org" ensures this Service is used with the correct Serverless Framework Access Key.
# org: sysentive
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: url-shortener
# "service" is the name of this project. This will also be added to your AWS resource names.
service: url-shortener

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    S3_BUCKET_NAME: meme-generator-${opt:stage, self:provider.stage}-images
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
          Resource:
            - "arn:aws:s3:::${self:provider.environment.S3_BUCKET_NAME}"
            - "arn:aws:s3:::${self:provider.environment.S3_BUCKET_NAME}/*"
functions:
  hello:
    handler: handler.index
    events:
      - http:
          path: ""
          method: get

  getUrl:
    handler: handler.getAllImages
    events:
      - http:
          path: images
          method: get
  
  createMeme:
    handler: handler.createMeme
    events:
      - http:
          path: meme
          method: post
          cors: true

resources:
  Resources:
    UrlTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    ImageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET_NAME}
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET, PUT, POST]
              AllowedOrigins: ['*']

plugins:
  - serverless-offline
  - serverless-dynamodb
  - serverless-s3-local

custom:
  serverless-dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      docker: true
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
  serverless-s3-local:
    directory: ./buckets
    port: 4569
